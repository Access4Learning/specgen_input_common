infraPaths:
  queueMessage:
    get:
      tags:
      - "queue"
      summary: Get next message from a queue and if messageId is given delete that message.
      description: Get next message from a queue and if messageId is given delete that message.
      operationId: getqueuemessages
      parameters:
      - name: id
        in: path
        description: >-
          ID of queue from which message shall be read.           
        required: true
        schema:
          type: string
      - name: deleteMessageIdMatrixParameter
        in: path
        description: >-
          Note this is a matrix parameter. The exact notation to be used for this URL segment is: ';messageId={deleteMessageId}'. 
          The ';meesageId=" part is a constant string while the '{deleteMessageIdId}' part is the message Id 
          of message to be deleted from the given queue before the next message is returned. 
          This message Id must match the messageId HTTP header of the previous response to this endpoint.
        required: false
        schema:
          type: string
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/authorization'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/accept'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/accept-encoding'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/accept-profile'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/fingerprint'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/messageId'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/messageType'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/requestId'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/requestAction'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/serviceType'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/timestamp'
      responses:
        '200':
          description: Returns next message. Payload can be any object collection related to the locale's data model.
          headers:
            'content-type':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/content-type'
            'content-encoding':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/content-encoding'
            'content-profile':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/content-profile'
            'fingerprint':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/fingerprint'
            'messageId':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/messageId'
            'messageType':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/messageType'
            'relativeServicePath':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/relativeServicePath'
            'requestId':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/requestId'
            'responseAction':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/responseAction'
            'serviceType':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/serviceType'
            'timestamp':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/timestamp'
            'vary':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/vary'
        '204':
          description: No more messages available.
          headers:
            'fingerprint':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/fingerprint'
            'messageId':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/messageId'
            'messageType':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/messageType'
            'relativeServicePath':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/relativeServicePath'
            'requestId':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/requestId'
            'responseAction':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/responseAction'
            'serviceType':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/serviceType'
            'timestamp':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/timestamp'
            'vary':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/vary'
        '401':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/401'
        '403':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/403'
        '410':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/410'
        '413':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/413'
        '415':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/415'
        '500':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/500'
        '501':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/501'
        '503':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/503'
    delete:
      tags:
      - "queue"
      summary: delete given message from a queue
      description: delete given message from a queue
      operationId: deletequeuemessages
      parameters:
      - name: id
        in: path
        description: >-
          ID of queue from which message shall be deleted  
        required: true
        schema:
          type: string
      - name: deleteMessageIdMatrixParameter
        in: path
        description: >-
          Note this is a matrix parameter. The exact notation to be used for this URL segment is: ';messageId={deleteMessageId}'. 
          The ';meesageId=" part is a constant string while the '{deleteMessageIdId}' part is the message Id 
          of message to be deleted from the given queue. This message Id must match the messageId HTTP header of the previous 
          response to the "GET" endpoint.
        required: true
        schema:
          type: string
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/authorization'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/accept'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/accept-encoding'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/accept-profile'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/fingerprint'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/messageId'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/messageType'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/requestId'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/requestAction'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/serviceType'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/timestamp'
      responses:
        '204':
          description: No more messages available or message deleted.
          headers:
            'fingerprint':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/fingerprint'
            'messageId':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/messageId'
            'messageType':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/messageType'
            'relativeServicePath':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/relativeServicePath'
            'requestId':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/requestId'
            'responseAction':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/responseAction'
            'serviceType':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/serviceType'
            'timestamp':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/timestamp'
            'vary':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/vary'
        '401':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/401'
        '403':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/403'
        '410':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/410'
        '413':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/413'
        '415':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/415'
        '500':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/500'
        '501':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/501'
        '503':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/503'

  jobCreatePath:
    post:
      tags:
      - "job"
      summary: Default operation to create a single job
      description: Default operation to create a single job
      operationId: createjob
      requestBody:
        $ref: 'OpenAPI_IN.yaml#/components/requestBodies/createjob'
      parameters:
      - name: serviceNames
        in: path
        description: >-
          Plural form of the functional service name (i.e. MergeStudents)
        required: true
        schema:
          type: string
      - name: serviceName
        in: path
        description: >-
          Singular form of the functional service name (i.e. MergeStudent)
        required: true
        schema:
          type: string
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/authorization'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/accept'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/accept-encoding'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/accept-profile'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/applicationKey'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/authenticatedUser'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/content-type'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/content-encoding'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/content-profile'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/fingerprint'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/generatorId'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/messageId'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/messageType'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/mustUseAdvisory'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/requestId'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/requestAction'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/serviceType'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/sourceName'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/timestamp'
      responses:
        '201':
          $ref: 'OpenAPI_IN.yaml#/components/responses/createjob'
        '400':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/400'
        '401':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/401'
        '403':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/403'
        '409':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/409'
        '412':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/412'
        '415':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/415'
        '500':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/500'
        '501':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/501'
        '503':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/503'

  jobPhasePaths:
    get:
      tags:
      - "job"
      summary: Get data for the given job's phase
      description: Get data for the given job's phase
      operationId: getjobphase
      parameters:
      - name: serviceNames
        in: path
        description: >-
          Name of the functional service (i.e. MergeStudents)
        required: true
        schema:
          type: string
      - name: id
        in: path
        description: >-
          ID of job for which the phase operation is invoked.       
        required: true
        schema:
          type: string
      - name: phaseName
        in: path
        description: >-
          Name of the phase to be invoked. 
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Phase operation succeeded. Payload defined in the document that describes the specific Job/Workflow.
          headers:
            'fingerprint':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/fingerprint'
            'messageId':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/messageId'
            'messageType':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/messageType'
            'relativeServicePath':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/relativeServicePath'
            'requestId':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/requestId'
            'responseAction':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/responseAction'
            'serviceType':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/serviceType'
            'timestamp':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/timestamp'
            'vary':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/vary'
        '202':
          description: Accepted. Returned for DELAYED requests. No payload.
          headers:
            'fingerprint':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/fingerprint'
            'messageId':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/messageId'
            'messageType':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/messageType'
            'relativeServicePath':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/relativeServicePath'
            'requestId':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/requestId'
            'responseAction':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/responseAction'
            'serviceType':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/serviceType'
            'timestamp':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/timestamp'
            'vary':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/vary'
        '204':
          description: Phase operation succeeded. No data available.
          headers:
            'fingerprint':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/fingerprint'
            'messageId':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/messageId'
            'messageType':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/messageType'
            'relativeServicePath':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/relativeServicePath'
            'requestId':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/requestId'
            'responseAction':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/responseAction'
            'serviceType':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/serviceType'
            'timestamp':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/timestamp'
            'vary':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/vary'
        '401':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/401'
        '403':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/403'
        '413':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/413'
        '415':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/415'
        '500':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/500'
        '501':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/501'
        '503':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/503'
    post:
      tags:
      - "job"
      summary: create data in the given job's phase
      description: create data in the given job's phase
      operationId: postjobphase
      parameters:
      - name: serviceNames
        in: path
        description: >-
          Name of the functional service (i.e. MergeStudents)
        required: true
        schema:
          type: string
      - name: id
        in: path
        description: >-
          ID of job for which the phase operation is invoked.       
        required: true
        schema:
          type: string
      - name: phaseName
        in: path
        description: >-
          Name of the phase to be invoked. 
        required: true
        schema:
          type: string
      responses:
        '201':
          description: Phase operation succeeded. Data has been posted. Response payload defined in the document that describes the specific Job/Workflow.
        '202':
          description: Accepted. Returned for DELAYED requests. No payload.
          headers:
            'fingerprint':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/fingerprint'
            'messageId':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/messageId'
            'messageType':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/messageType'
            'relativeServicePath':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/relativeServicePath'
            'requestId':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/requestId'
            'responseAction':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/responseAction'
            'serviceType':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/serviceType'
            'timestamp':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/timestamp'
            'vary':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/vary'
        '204':
          description: Phase operation succeeded. Data has been created. No data available.
          headers:
            'fingerprint':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/fingerprint'
            'messageId':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/messageId'
            'messageType':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/messageType'
            'relativeServicePath':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/relativeServicePath'
            'requestId':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/requestId'
            'responseAction':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/responseAction'
            'serviceType':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/serviceType'
            'timestamp':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/timestamp'
            'vary':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/vary'
        '401':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/401'
        '403':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/403'
        '413':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/413'
        '415':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/415'
        '500':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/500'
        '501':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/501'
        '503':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/503'
    put:
      tags:
      - "job"
      summary: Update data in the given job's phase
      description: Update data in the given job's phase
      operationId: putjobphase
      parameters:
      - name: serviceNames
        in: path
        description: >-
          Name of the functional service (i.e. MergeStudents)
        required: true
        schema:
          type: string
      - name: id
        in: path
        description: >-
          ID of job for which the phase operation is invoked.       
        required: true
        schema:
          type: string
      - name: phaseName
        in: path
        description: >-
          Name of the phase to be invoked. 
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Phase operation succeeded. Data has been updated. Response payload defined in the document that describes the specific Job/Workflow.
        '202':
          description: Accepted. Returned for DELAYED requests. No payload.
          headers:
            'fingerprint':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/fingerprint'
            'messageId':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/messageId'
            'messageType':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/messageType'
            'relativeServicePath':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/relativeServicePath'
            'requestId':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/requestId'
            'responseAction':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/responseAction'
            'serviceType':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/serviceType'
            'timestamp':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/timestamp'
            'vary':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/vary'
        '204':
          description: Phase operation succeeded. Data has been updated. No data available.
          headers:
            'fingerprint':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/fingerprint'
            'messageId':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/messageId'
            'messageType':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/messageType'
            'relativeServicePath':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/relativeServicePath'
            'requestId':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/requestId'
            'responseAction':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/responseAction'
            'serviceType':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/serviceType'
            'timestamp':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/timestamp'
            'vary':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/vary'
        '401':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/401'
        '403':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/403'
        '413':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/413'
        '415':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/415'
        '500':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/500'
        '501':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/501'
        '503':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/503'
    delete:
      tags:
      - "job"
      summary: Delete data for the given job's phase
      description: Delete data for the given job's phase
      operationId: deletejobpahse
      parameters:
      - name: serviceNames
        in: path
        description: >-
          Name of the functional service (i.e. MergeStudents)
        required: true
        schema:
          type: string
      - name: id
        in: path
        description: >-
          ID of job for which the phase operation is invoked.       
        required: true
        schema:
          type: string
      - name: phaseName
        in: path
        description: >-
          Name of the phase to be invoked. 
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Phase operation succeeded. Data has been deleted. Response payload defined in the document that describes the specific Job/Workflow.
          headers:
            'fingerprint':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/fingerprint'
            'messageId':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/messageId'
            'messageType':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/messageType'
            'relativeServicePath':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/relativeServicePath'
            'requestId':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/requestId'
            'responseAction':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/responseAction'
            'serviceType':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/serviceType'
            'timestamp':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/timestamp'
            'vary':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/vary'
        '202':
          description: Accepted. Returned for DELAYED requests. No payload.
          headers:
            'fingerprint':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/fingerprint'
            'messageId':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/messageId'
            'messageType':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/messageType'
            'relativeServicePath':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/relativeServicePath'
            'requestId':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/requestId'
            'responseAction':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/responseAction'
            'serviceType':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/serviceType'
            'timestamp':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/timestamp'
            'vary':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/vary'
        '204':
          description: Phase operation succeeded. Data has been deleted. No data available.
          headers:
            'fingerprint':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/fingerprint'
            'messageId':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/messageId'
            'messageType':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/messageType'
            'relativeServicePath':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/relativeServicePath'
            'requestId':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/requestId'
            'responseAction':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/responseAction'
            'serviceType':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/serviceType'
            'timestamp':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/timestamp'
            'vary':
              $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/vary'
        '401':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/401'
        '403':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/403'
        '413':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/413'
        '415':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/415'
        '500':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/500'
        '501':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/501'
        '503':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/503'
  jobPhaseStatesGet:
    get:
      tags:
      - "job"
      summary: Get state list/history for the given phase.
      description: Get state list/history for the given phase.
      operationId: getjobphasestatus
      parameters:
      - name: serviceNames
        in: path
        description: >-
          Name of the functional service (i.e. MergeStudents)
        required: true
        schema:
          type: string
      - name: id
        in: path
        description: >-
          ID of job for which the phase state lists shall be returned.       
        required: true
        schema:
          type: string
      - name: phaseName
        in: path
        description: >-
          Name of the phase for which the phase state lists shall be returned.
        required: true
        schema:
          type: string
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/authorization'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/accept'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/accept-encoding'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/accept-profile'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/fingerprint'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/generatorId'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/messageId'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/messageType'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/requestId'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/requestAction'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/serviceType'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/sourceName'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/timestamp'
      responses:
        '200':
          $ref: '#/components/infraExamples/states'
        '204':
          description: No data available.
        '401':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/401'
        '403':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/403'
        '413':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/413'
        '415':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/415'
        '500':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/500'
        '501':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/501'
        '503':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/503'
  jobPhaseStatesPost:
    post:
      tags:
      - "job"
      summary: Create/update state of a job phase.
      description: Create/update state of a job phase.
      operationId: postjobphasestate
      parameters:
      - name: serviceNames
        in: path
        description: >-
          Name of the functional service (i.e. MergeStudents)
        required: true
        schema:
          type: string
      - name: id
        in: path
        description: >-
          ID of job for which the phase state shall be added.       
        required: true
        schema:
          type: string
      - name: phaseName
        in: path
        description: >-
          Name of the phase for which the phase state shall be added.
        required: true
        schema:
          type: string
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/authorization'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/accept'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/accept-encoding'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/accept-profile'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/content-type'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/content-encoding'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/content-profile'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/fingerprint'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/generatorId'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/messageId'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/messageType'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/requestId'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/requestAction'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/serviceType'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/sourceName'
      - $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/request/timestamp'
      requestBody:
        $ref: '#/components/requestBodies/createstate'
      responses:
        '201':
          $ref: '#/components/responsePayloads/createstate'
        '401':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/401'
        '403':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/403'
        '413':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/413'
        '415':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/415'
        '500':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/500'
        '501':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/501'
        '503':
          $ref: 'commonDefs.yaml#/components/schemas/errorResponses/responses/503'
          
components:

  # ------------------------------------------
  # -- Request Payloads          
  # ------------------------------------------
  requestBodies:
    #//
    #// state
    #//
    createstate:
      description: Payload for job phase state
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createSchemastate'
          examples:
            createPESC:
              $ref: '#/components/infraExamples/stateCreateRequest/pesc'
#{CommenOutExmpl}            createGoessner:
#{CommenOutExmpl}              $ref: '#/components/infraExamples/stateCreateRequest/goessner'
#{CommenOutExmpl}        application/xml:
#{CommenOutExmpl}          schema:
#{CommenOutExmpl}            $ref: '#/components/schemas/createSchemastate'
#{CommenOutExmpl}          examples:
#{CommenOutExmpl}            createXML:
#{CommenOutExmpl}              $ref: '#/components/infraExamples/stateCreateRequest/xml'

  # ------------------------------------------
  # -- Response Payloads          
  # ------------------------------------------
  responsePayloads:
    #//
    #// state
    #//
    createstate:
      description: Payload for job phase state
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createSchemastate'
          examples:
            createPESC:
              $ref: '#/components/infraExamples/stateCreateResponse/pesc'
#{CommenOutExmpl}            createGoessner:
#{CommenOutExmpl}              $ref: '#/components/infraExamples/stateCreateResponse/goessner'
#{CommenOutExmpl}        application/xml:
#{CommenOutExmpl}          schema:
#{CommenOutExmpl}            $ref: '#/components/schemas/createSchemastate'
#{CommenOutExmpl}          examples:
#{CommenOutExmpl}            createXML:
#{CommenOutExmpl}              $ref: '#/components/infraExamples/stateCreateResponse/xml'
      headers:
        'content-type':
          $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/content-type'
        'content-encoding':
          $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/content-encoding'
        'content-profile':
          $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/content-profile'
        'fingerprint':
          $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/fingerprint'
        'messageId':
          $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/messageId'
        'messageType':
          $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/messageType'
        'relativeServicePath':
          $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/relativeServicePath'
        'requestId':
          $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/requestId'
        'responseAction':
          $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/responseAction'
        'serviceType':
          $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/serviceType'
        'timestamp':
          $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/timestamp'
        'vary':
          $ref: 'commonDefs.yaml#/components/schemas/httpHeaders/response/vary'

  schemas:
    # ------------------------------------------
    # -- Schema Definitions          
    # ------------------------------------------
    createSchemastate:
      properties:
        state:
          type: object
          description: >-
            Payload definition for job phase state
          $ref: 'jsonSchema_OpenAPI#{OpenAPIVersion}_Create_IN.yaml#/definitions/stateCommon'

  # ------------------------------------------
  # -- Examples specific to paths in this file          
  # ------------------------------------------
  infraExamples:
    states:
      description: A list of states for a given job phase.
      content:
        application/json:
          schema:
            type: object
            properties:
              states:
                type: object
                description: >-
                  A list of states for the given job phase.
                $ref: 'jsonSchema_OpenAPI#{OpenAPIVersion}_Create_IN.yaml#/definitions/stateCollection'
          example:
            {"states" : {"state" : [{"id": "5b72f2d4-7a83-4297-a71f-8b5fb26cbf14","type" : "NOTSTARTED","created": "2020-08-29T12:45:10.126Z","lastModified": "2020-08-29T12:50:27.394Z","description": "Merging of students in progress."},{"id": "41953aaa-2811-11e6-b67b-9e71128cae77","type" : "COMPLETED","created": "2020-08-30T02:10:00.000Z","description": "Merging of students completed successfully."}]}}
#{CommenOutExmpl}        application/xml:
#{CommenOutExmpl}          schema:
#{CommenOutExmpl}            type: object
#{CommenOutExmpl}            properties:
#{CommenOutExmpl}              states:
#{CommenOutExmpl}                type: object
#{CommenOutExmpl}                description: >-
#{CommenOutExmpl}                  A list of states for the given job phase.
#{CommenOutExmpl}                $ref: 'jsonSchema_OpenAPI#{OpenAPIVersion}_Create_IN.yaml#/definitions/stateCollection'
#{CommenOutExmpl}          example: >-
#{CommenOutExmpl}            <states>
#{CommenOutExmpl}              <state id="5b72f2d4-7a83-4297-a71f-8b5fb26cbf14">
#{CommenOutExmpl}                <type>INPROGRESS</type>
#{CommenOutExmpl}                <created>2020-08-29T12:45:10.126Z</created>
#{CommenOutExmpl}                <lastModified>2020-08-29T12:50:27.394Z<lastModified>
#{CommenOutExmpl}                <description>Merging of students in progress.</description>
#{CommenOutExmpl}              </state> 
#{CommenOutExmpl}              <state id="41953aaa-2811-11e6-b67b-9e71128cae77">
#{CommenOutExmpl}                <type>COMPLETED</type>
#{CommenOutExmpl}                <created>2020-08-30T02:10:00.000Z</created>
#{CommenOutExmpl}                <description>Merging of students completed successfully.</description>
#{CommenOutExmpl}              </state>
#{CommenOutExmpl}            </states>

    stateCreateRequest:
      pesc:
        summary: PESC notation for job phase state
        value:
          {"state":{"type": "INPROGRESS", "description": "Merged student data."}}
#{CommenOutExmpl}      goessner:
#{CommenOutExmpl}        summary: Goessner notation for job phase state
#{CommenOutExmpl}        value:
#{CommenOutExmpl}          {"state":{"type": "INPROGRESS", "description": "Merged student data."}}
#{CommenOutExmpl}      xml:
#{CommenOutExmpl}        summary: XML job phase state
#{CommenOutExmpl}        value: >-
#{CommenOutExmpl}          <state >
#{CommenOutExmpl}            <type>INPROGRESS</type>
#{CommenOutExmpl}            <description>Merged student data.</description>
#{CommenOutExmpl}          </state> 

    stateCreateResponse:
      pesc:
        summary: PESC notation for job phase state
        value:
          {"state":{"id": "5b72f2d4-7a83-4297-a71f-8b5fb26cbf14", "type": "INPROGRESS", "created": "2020-08-29T12:45:10.126Z", "lastModified": "2020-08-29T12:50:27.394Z", "description": "Merged student data."}}
#{CommenOutExmpl}      goessner:
#{CommenOutExmpl}        summary: Goessner notation for job phase state
#{CommenOutExmpl}        value:
#{CommenOutExmpl}          {"state":{"@id": "5b72f2d4-7a83-4297-a71f-8b5fb26cbf14", "type": "INPROGRESS", "created": "2020-08-29T12:45:10.126Z", "lastModified": "2020-08-29T12:50:27.394Z", "description": "Merged student data."}}
#{CommenOutExmpl}      xml:
#{CommenOutExmpl}        summary: XML job phase state
#{CommenOutExmpl}        value: >-
#{CommenOutExmpl}          <state id="5b72f2d4-7a83-4297-a71f-8b5fb26cbf14">
#{CommenOutExmpl}            <type>INPROGRESS</type>
#{CommenOutExmpl}            <created>2020-08-29T12:45:10.126Z</created>
#{CommenOutExmpl}            <lastModified>2020-08-29T12:50:27.394Z<lastModified>
#{CommenOutExmpl}            <description>Merged student data.</description>
#{CommenOutExmpl}          </state> 
        